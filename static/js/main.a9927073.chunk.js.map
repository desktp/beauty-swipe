{"version":3,"sources":["components/Card/Card.module.css","components/FilterBar/FilterButton/FilterButton.module.css","components/Button/Button.module.css","components/Spinner/Spinner.module.css","components/FilterBar/FilterBar.module.css","ducks/ProductDuck.js","sagas/sagas.js","store.js","components/Spinner/Spinner.js","components/Card/Card.js","components/Button/Button.js","components/FilterBar/FilterButton/FilterButton.js","components/FilterBar/FilterBar.js","App.js","serviceWorker.js","index.js","App.module.css"],"names":["module","exports","container","imgContainer","productName","checkbox","label","labelSelected","button","like","dislike","spinner","spin","filterBarContainer","types","FETCH_REQUEST","FETCH_FAILURE","FETCH_SUCCESS","RATE_PRODUCT","SAVE_PRODUCT_RATING","SET_FILTER","SET_FILTER_SUCCESS","INITIAL_STATE","products","ratedProducts","loading","error","fetchProducts","rateProduct","productsSaga","action","page","response","productsJson","type","regenerator_default","a","wrap","_context","prev","next","payload","call","fetch","concat","filter","sent","json","put","t0","stop","_marked","_context2","_marked2","_context3","takeLatest","takeEvery","_marked3","devToolsExtension","f","process","BROWSER","window","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","state","arguments","length","undefined","_ref","Object","objectSpread","toConsumableArray","hits","defineProperty","product","run","Spinner","react_default","createElement","className","s","Card","_ref$product","_useState","useState","_useState2","slicedToArray","imgLoaded","setImgLoaded","useEffect","src","imageUrl","alt","name","style","display","onLoad","brand","Button","text","_ref$onClick","onClick","FilterButton","checked","handleFilterSelection","option","Fragment","value","onChange","htmlFor","FilterBar","currentFilter","opts","map","opt","key","filterOptions","mapDispatch","setFilter","connect","_ref2","currentProduct","setCurrentProduct","_useState3","_useState4","setCurrentFilter","handleNextProduct","header","contentContainer","category","likeCounter","likeWrapper","components_Card_Card","buttonWrapper","components_Button_Button","Boolean","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9927073.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__3BCzV\",\"imgContainer\":\"Card_imgContainer__1Tcz3\",\"productName\":\"Card_productName__BX8tU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"FilterButton_checkbox__kkxvD\",\"label\":\"FilterButton_label__3jlM6\",\"labelSelected\":\"FilterButton_labelSelected__3NJaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\",\"like\":\"Button_like__3XCNA\",\"dislike\":\"Button_dislike__2pUHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1Neu5\",\"spin\":\"Spinner_spin__2cA5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterBarContainer\":\"FilterBar_filterBarContainer__1zSFS\"};","// Ducks! https://github.com/erikras/ducks-modular-redux\n\n// Actions\nconst FETCH_REQUEST = 'FETCH_REQUEST';\nconst FETCH_SUCCESS = 'FETCH_SUCCESS';\nconst FETCH_FAILURE = 'FETCH_FAILURE';\nconst RATE_PRODUCT = 'RATE_PRODUCT';\nconst SAVE_PRODUCT_RATING = 'SAVE_PRODUCT_RATING';\nconst SET_FILTER = 'SET_FILTER';\nconst SET_FILTER_SUCCESS = 'SET_FILTER_SUCCESS';\n\nexport const types = { \n  FETCH_REQUEST,\n  FETCH_FAILURE,\n  FETCH_SUCCESS,\n  RATE_PRODUCT,\n  SAVE_PRODUCT_RATING,\n  SET_FILTER,\n  SET_FILTER_SUCCESS,\n};\n\n// Reducer\nconst INITIAL_STATE = {\n  products: [],\n  ratedProducts: {\n    'like': [],\n    'dislike': [],\n  },\n  loading: true,\n  error: false,\n}\n\nexport default function reducer(state = INITIAL_STATE, { type, payload }) {\n  switch (type) {\n    case types.FETCH_SUCCESS:\n      return {\n        ...state,\n        page: payload.page,\n        products: [...state.products, ...payload.hits],\n        loading: false,\n      };\n    case types.SET_FILTER_SUCCESS:\n      return {\n        ...state,\n        page: payload.page,\n        // When setting a new filter, we want to reset\n        // the products we already had\n        products: payload.hits,\n        loading: false,\n      };\n    case types.FETCH_FAILURE: \n      return {\n        ...state,\n        loading: false,\n        error: true,\n      };\n    case types.SAVE_PRODUCT_RATING:\n      return {\n        ...state,\n        ratedProducts: {\n          ...state.ratedProducts,\n          [payload.action]: [...state.ratedProducts[payload.action], payload.product]\n        }\n      }\n    default: return state;\n  }\n}\n\n// Action Creators\nexport const fetchProducts = (page = 0, filter = '') => ({ type: FETCH_REQUEST, payload: { page, filter } });\n\nexport const setFilter = (filter = '') => ({ type: SET_FILTER, payload: { filter } });\n\nexport const rateProduct = (product, action) => ({ type: RATE_PRODUCT, payload: { product, action } });\n","import { types } from '../ducks';\nimport { call, put, takeLatest, takeEvery } from 'redux-saga/effects'\n\nfunction* fetchProducts(action) {\n  try {\n    const page = action.payload.page || 0;\n    const response = yield call(fetch, `https://ycl641scac.execute-api.us-west-2.amazonaws.com/staging/products?page=${page}&subcategory=${action.payload.filter}`);\n    const productsJson = yield response.json();\n    const type = action.type === types.FETCH_REQUEST ? types.FETCH_SUCCESS : types.SET_FILTER_SUCCESS;\n    yield put({ type, payload: productsJson });\n  } catch (e) {\n    yield put({ type: types.FETCH_FAILURE });\n  }\n}\n\nfunction* rateProduct(action) {\n  yield put({ type: types.SAVE_PRODUCT_RATING, payload: action.payload });\n}\n\nfunction* productsSaga() {\n  yield takeLatest(types.FETCH_REQUEST, fetchProducts);\n  yield takeLatest(types.SET_FILTER, fetchProducts);\n  yield takeEvery(types.RATE_PRODUCT, rateProduct);\n}\n\nexport default productsSaga;","import createSagaMiddleware from 'redux-saga'\n\nimport { createStore, applyMiddleware, compose } from 'redux'\n\nimport reducer from './ducks'\nimport productsSaga from './sagas'\n\nlet devToolsExtension = f => f;\nif (process.env.BROWSER && window.__REDUX_DEVTOOLS_EXTENSION__) {\n  devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__();\n}\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(\n  applyMiddleware(sagaMiddleware),\n  devToolsExtension,\n);\n\nconst store = createStore(reducer, enhancer);\n\nsagaMiddleware.run(productsSaga);\n\nexport default store;\n\n","import React from 'react';\n\nimport s from './Spinner.module.css';\n\nexport default () => (\n  <span className={s.spinner} />\n);\n\n","import React, { useState, useEffect } from 'react';\n\nimport Spinner from '../Spinner';\n\nimport s from './Card.module.css';\n\nconst Card = ({ product = {} }) => {\n  const [imgLoaded, setImgLoaded] = useState(false);\n\n  useEffect(() => {\n    setImgLoaded(false);\n  }, [product])\n\n  const handleImageLoad = () => setImgLoaded(true);\n\n  return (\n    <div className={s.container}>\n      <div className={s.imgContainer}>\n        {\n          !imgLoaded && <Spinner />\n        }\n        <img src={product.imageUrl} alt={product.name} style={!imgLoaded ? { display: 'none' } : undefined} onLoad={handleImageLoad}/>\n      </div>\n      <p className={s.productName}>{product.name}</p>\n      <p>{product.brand}</p>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\n\nimport s from './Button.module.css';\n\nconst Button = ({ text, onClick = () => {} }) => <button onClick={onClick} className={`${s.button} ${s[text]}`} />;\n\nexport default Button;\n","import React from 'react';\n\nimport s from './FilterButton.module.css';\n\nexport default ({ checked, handleFilterSelection, option }) => (\n  <>\n    <input className={s.checkbox} type=\"checkbox\" name={option} value={option} checked={checked} onChange={handleFilterSelection} />\n    <label className={`${s.label} ${checked ? s.labelSelected : undefined}`} htmlFor={option} onClick={handleFilterSelection}>{option}</label>\n  </>\n);","import React from 'react';\n\nimport FilterButton from './FilterButton';\n\nimport s from './FilterBar.module.css';\n\nexport default ({ handleFilterSelection, currentFilter, opts }) => (\n  <div className={s.filterBarContainer}>\n    {opts.map(opt => <FilterButton key={opt} option={opt} handleFilterSelection={handleFilterSelection(opt)} checked={currentFilter === opt} />)}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Spinner from './components/Spinner';\nimport Card from './components/Card';\nimport Button from './components/Button';\nimport FilterBar from './components/FilterBar';\n\nimport './root.css';\nimport s from './App.module.css';\n\nimport { fetchProducts, rateProduct, setFilter } from './ducks';\n\nconst filterOptions = ['eyeshadow', 'concealer', 'foundation', 'lipstick', 'blush'];\n\nfunction App({ fetchProducts, rateProduct, setFilter, products, ratedProducts, page, loading }) {\n  const [currentProduct, setCurrentProduct] = useState(0);\n  const [currentFilter, setCurrentFilter] = useState('');\n\n  // Passing an empty array to the second arg makes this behave\n  // like componentDidMount\n  useEffect(() => {\n    fetchProducts();\n  }, []); // eslint-disable-line\n\n  const handleNextProduct = action => () => {\n    // If we're reaching the end, fetch more products preemptively\n    if ((currentProduct + 2) === products.length) {\n      fetchProducts(page + 1, currentFilter);\n    }\n\n    rateProduct(products[currentProduct], action);\n    setCurrentProduct(currentProduct + 1);\n  };\n\n  const handleFilterSelection = category => () => {\n    // Needs to fetch from scratch with new filter;\n    setFilter(category);\n\n    if (currentFilter === category) return setCurrentFilter('');\n    setCurrentFilter(category);\n  }\n\n  return (\n    <>\n      <header className={s.header}>\n        Beauty Swipe\n      </header>\n      <main className={s.contentContainer}>\n        {\n          products.length <= 0 || loading ?\n            <Spinner /> :\n            <>\n              <FilterBar\n                opts={filterOptions}\n                handleFilterSelection={handleFilterSelection}\n                currentFilter={currentFilter}\n              />\n              <div className={s.likeCounter}>\n                <div className={`${s.likeWrapper} ${s.dislike}`}>\n                  <span>\n                    {ratedProducts.dislike.length}\n                  </span>\n                </div>\n                <div className={s.likeWrapper}>\n                  <span>\n                    {ratedProducts.like.length}\n                  </span>\n                </div>\n              </div>\n              <Card product={products[currentProduct]} />\n              <div className={s.buttonWrapper}>\n                <Button text=\"dislike\" onClick={handleNextProduct('dislike')} />\n                <Button text=\"like\" onClick={handleNextProduct('like')} />\n              </div>\n            </>\n        }\n      </main>\n    </>\n  );\n}\n\nconst mapState = ({ loading, products, ratedProducts, page }) => ({ loading, products, ratedProducts, page });\n\nconst mapDispatch = { fetchProducts, rateProduct, setFilter };\n\nexport default connect(mapState, mapDispatch)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  )\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__3ZZ1n\",\"contentContainer\":\"App_contentContainer__1Uo_h\",\"buttonWrapper\":\"App_buttonWrapper__2758t\",\"likeCounter\":\"App_likeCounter__DtM3m\",\"likeWrapper\":\"App_likeWrapper__cHNCp\",\"dislike\":\"App_dislike__1E5xE\"};"],"sourceRoot":""}